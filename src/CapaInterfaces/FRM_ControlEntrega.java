/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaInterfaces;

import Capa_Mensajes.Mensajes;
import Capa_Validaciones.Validaciones;
import java.awt.Event;
import java.awt.GridBagLayout;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Karlita
 */
public class FRM_ControlEntrega extends javax.swing.JDialog {

    /**
     * Creates new form ControlEntrega
     */
    DefaultTableModel model;
    Capa_ConexionBD.Conexion conexion = new Capa_ConexionBD.Conexion();//Crea una conexion con la base de datos 
    Capa_Validaciones.Validaciones validar = new Validaciones();//Se utiliza para llamar la validaciones
    SimpleDateFormat formato = new SimpleDateFormat("d/MM/yyyy");//Da formato a la fecha para que se pueda guardar en la base de datos
    Capa_Mensajes.Mensajes mensaje = new Capa_Mensajes.Mensajes();
    String[] var1 = new String[10];//Crea un array para guardar los datos en la tabla
    String estado;
    String[] var2 = {"Fecha solicitud", "Estado", "CÃ©dula solicitante", "Nombres Solicitante", "Apellidos Solicitante", "N Oficio Solicitud"};//Es el nombre de la columna de la tabla

    public FRM_ControlEntrega(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Icons/logo_2.png")).getImage());
        this.setLocationRelativeTo(null);
        tabla_solicitudes.getTableHeader().setReorderingAllowed(false);
        radionbutttonListado();
        activarcampos();
        btn_entregar.setEnabled(false);
        btn_modificar.setEnabled(false);
        this.setDefaultCloseOperation(0);
    }

    public void bloquearTeclas(){
        InputMap map1 = txt_cedula_persona.getInputMap(txt_cedula_persona.WHEN_FOCUSED);
        map1.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //Valida que un solo radio button pueda ser selecionado
    public void radionbutttonListado() {
        ButtonGroup BtnGrupoListado = new ButtonGroup();
        ButtonGroup BtnGrupoEstado = new ButtonGroup();
        BtnGrupoListado.add(rbtn_estado);
        BtnGrupoListado.add(rbtn_fecha_solicitud);
        BtnGrupoListado.add(rbtn_solicitante);
    }

    // Valida que se active los campos de acuerdo al radio button seleccionado  
    public void activarcampos() {
        model = new DefaultTableModel(null, var2);
        txt_cedula_persona.setEnabled(false);
        txt_nombre_persona.setEnabled(false);
        date_fecha_docSolicitud.setEnabled(false);
        combo_estado_activo.setEnabled(false);
        //jButton1.setEnabled(false);
        if (rbtn_solicitante.isSelected()) {
            txt_cedula_persona.setEnabled(true);
            combo_estado_activo.setSelectedItem("Seleccionar");
            date_fecha_docSolicitud.setDate(null);
            btn_entregar.setEnabled(false);
            btn_modificar.setEnabled(false);
        }
        if (rbtn_fecha_solicitud.isSelected()) {
            date_fecha_docSolicitud.setEnabled(true);
            jButton1.setEnabled(true);
            txt_cedula_persona.setText("");
            combo_estado_activo.setSelectedItem("Seleccionar");
            btn_entregar.setEnabled(false);
            btn_modificar.setEnabled(false);
            date_fecha_docSolicitud.getDateEditor().setEnabled(false);
        }
        if (rbtn_estado.isSelected()) {
            combo_estado_activo.setEnabled(true);
            txt_cedula_persona.setText("");
            date_fecha_docSolicitud.setDate(null);
            tabla_solicitudes.setModel(model);
            btn_entregar.setEnabled(false);
            btn_modificar.setEnabled(false);
        }
    }

    //Este metodo busca el numero de cedula en la base de datos de acuerdo al id_persona y al id_persona de recurso Humanos 
    public int busquedacedula(String cedulaingresada) {
        int respuesta = 0;
        conexion.crearConexion();
        model = new DefaultTableModel(null, var2);
        String sql = "SELECT  tmovdoscon.fecha_docsolicitud,\n"
                + "tmovdoscon.estado_docsolicitud,\n"
                + "tmaepercon.cedula_persona,\n"
                + "tmaepercon.nombre_persona,\n"
                + "tmaepercon.apellido_persona,\n"
                + "tmovdoscon.codigooficio_docsolicitud,\n"
                + "tmovrehcon.idpersona_rrhh,tmovrehcon.id_rrhh,\n"
                + "tmaepercon.id_persona,\n"
                + "tmovdoscon.idsolicitante_docsolicitud FROM tmovrehcon,tmaepercon, tmovdoscon WHERE \n"
                + "tmaepercon.cedula_persona ='" + cedulaingresada + "' and tmaepercon.id_persona = tmovrehcon.idpersona_rrhh  \n"
                + "and tmovrehcon.id_rrhh = tmovdoscon.idsolicitante_docsolicitud\n"
                + "and tmaepercon.id_persona BETWEEN '6' AND '10000000' and tmovdoscon.estado_docsolicitud BETWEEN '2' AND '3'";
        
        ResultSet rs = conexion.ejecutarSQLSelect(sql);
        try {
            while (rs.next()) {
                respuesta = 1;
                var1[0] = rs.getString(1);
                if (rs.getString(2).equals("2")) {
                    estado = "Realizado";
                    var1[1] = estado;
                } else if (rs.getString(2).equals("3")) {
                    estado = "Entregado";
                    var1[1] = estado;
                }
                var1[2] = rs.getString(3);
                var1[3] = rs.getString(4);
                var1[4] = rs.getString(5);
                var1[5] = rs.getString(6);
                model.addRow(var1);
                tabla_solicitudes.setModel(model);
                txt_nombre_persona.setText(var1[3] + " " + var1[4]);
            }
        } catch (Exception ex) {
            System.out.println("error");
        }
        return respuesta;
    }

    //Carga los datos en el combo de acuerdo a la base de datos 
    public void combo_Descripcion() {
        combo_estado_activo.removeAll();
        conexion.crearConexion();
        String sql = "SELECT tmovdoscon.estado_docsolicitud FROM tmovdoscon";
        ResultSet rs = conexion.ejecutarSQLSelect(sql);
        try {
            while (rs.next()) {
                this.combo_estado_activo.addItem(rs.getString("estado_docsolicitud"));
            }
        } catch (Exception ex) {
            System.out.println("error");
        }
    }

    // realiza busqueda del estado en la base de datos de acuerdo al combo seleccionado
    public void busquedaCombox(int DatosRecibidoCombox) {
        conexion.crearConexion();
        String estado;
        int filaseleccionada = tabla_solicitudes.getSelectedRow();
        String[] filaselecionadaTipoCaracpter = new String[2];
        int vec[] = new int[2];
        model = new DefaultTableModel(null, var2);
        String sql = "SELECT  tmovdoscon.fecha_docsolicitud,\n"
                + "tmovdoscon.estado_docsolicitud,\n"
                + "tmaepercon.cedula_persona,\n"
                + "tmaepercon.nombre_persona,\n"
                + "tmaepercon.apellido_persona,\n"
                + "tmovdoscon.codigooficio_docsolicitud,\n"
                + "tmovrehcon.idpersona_rrhh,tmovrehcon.id_rrhh,\n"
                + "tmaepercon.id_persona,\n"
                + "tmovdoscon.idsolicitante_docsolicitud FROM tmovrehcon,tmaepercon, tmovdoscon WHERE \n"
                + "tmovdoscon.estado_docsolicitud = '" + DatosRecibidoCombox + "' and tmaepercon.id_persona = tmovrehcon.idpersona_rrhh  \n"
                + "and tmovrehcon.id_rrhh = tmovdoscon.idsolicitante_docsolicitud\n"
                + "and tmaepercon.id_persona BETWEEN '6' AND '10000000' and tmovdoscon.estado_docsolicitud  BETWEEN '2' AND '3' ;";

        ResultSet rs = conexion.ejecutarSQLSelect(sql);
        try {

            while (rs.next()) {
                var1[0] = rs.getString(1);
                if (rs.getString(2).equals("2")) {
                    estado = "Realizado";
                    btn_modificar.setEnabled(false);
                    var1[1] = estado;
                } else if (rs.getString(2).equals("3")) {
                    estado = "Entregado";
                    btn_entregar.setEnabled(false);
                    var1[1] = estado;
                }
                var1[2] = rs.getString(3);
                var1[3] = rs.getString(4);
                var1[4] = rs.getString(5);
                var1[5] = rs.getString(6);
                model.addRow(var1);
                tabla_solicitudes.setModel(model);

            }
        } catch (Exception ex) {
            System.out.println("error");
        }
    }

    //realiza busqueda del  la fecha en la base de datos de acuerdo al combo seleccionado
    public int busquedaFeacha() {
        int respuesta = 0;
        conexion.crearConexion();
        model = new DefaultTableModel(null, var2);
        String sql = "SELECT  tmovdoscon.fecha_docsolicitud,\n"
                + "tmovdoscon.estado_docsolicitud,\n"
                + "tmaepercon.cedula_persona,\n"
                + "tmaepercon.nombre_persona,\n"
                + "tmaepercon.apellido_persona,\n"
                + "tmovdoscon.codigooficio_docsolicitud,\n"
                + "tmovrehcon.idpersona_rrhh,tmovrehcon.id_rrhh,\n"
                + "tmaepercon.id_persona,\n"
                + "tmovdoscon.idsolicitante_docsolicitud FROM tmovrehcon,tmaepercon, tmovdoscon WHERE \n"
                + "tmovdoscon.fecha_docsolicitud =   '" + formato.format(date_fecha_docSolicitud.getDate()) + "' and tmaepercon.id_persona = tmovrehcon.idpersona_rrhh  \n"
                + "and tmovrehcon.id_rrhh = tmovdoscon.idsolicitante_docsolicitud\n"
                + "and tmaepercon.id_persona BETWEEN '6' AND '10000000' and tmovdoscon.estado_docsolicitud  BETWEEN '2' AND '3' ";
        ResultSet rs = conexion.ejecutarSQLSelect(sql);
        try {
            while (rs.next()) {
                respuesta = 1;
                var1[0] = rs.getString(1);
                if (rs.getString(2).equals("2")) {
                    estado = "Realizado";
                    var1[1] = estado;
                } else if (rs.getString(2).equals("3")) {
                    estado = "Entregado";
                    var1[1] = estado;
                }
                var1[2] = rs.getString(3);
                var1[3] = rs.getString(4);
                var1[4] = rs.getString(5);
                var1[5] = rs.getString(6);
                model.addRow(var1);
                tabla_solicitudes.setModel(model);

            }
        } catch (Exception ex) {
            System.out.println("error");
        }
        return respuesta;
    }

    //Permite que el dato seleccionado en la tabla active los botones de entregado y relaizado de acuerdo al estado
    public void activarBtn() {
        String id = tabla_solicitudes.getValueAt(tabla_solicitudes.getSelectedRow(), 1).toString();
        btn_entregar.setEnabled(false);
        btn_modificar.setEnabled(false);
        if ("Realizado".equals(id)) {
            btn_entregar.setEnabled(true);
        } else if ("Entregado".equals(id)) {
            btn_modificar.setEnabled(true);
        }
    }
    // Limpia los campos de el formulario
    public void nuevo() {
        model = new DefaultTableModel(null, var2);
        txt_cedula_persona.setText("");
        txt_nombre_persona.setText("");
        combo_estado_activo.setSelectedItem("Seleccionar");
        date_fecha_docSolicitud.setDate(null);
        tabla_solicitudes.setModel(model);
        btn_entregar.setEnabled(false);
        btn_modificar.setEnabled(false);
    }
    // Envia los datos  seleccionado de la tabla a el Registro de Entrega 
    public int mandarDatos() {
        int envia = 0;
        int filaseleccionada = tabla_solicitudes.getSelectedRow();
        String filaselecionadaTipoCaracpter;
        String[] datosASerEnviados = new String[10];
        if (filaseleccionada == - 1) {
            mensaje.msg_advertencia(this, "Debe seleccionar un dato");
        } else {
            filaselecionadaTipoCaracpter = tabla_solicitudes.getValueAt(filaseleccionada, 5).toString();
            String sql = "SELECT "
                    + "tmovdoscon.id_docsolicitud,\n"
                    + "tmovdoscon.fecha_docsolicitud,\n"
                    + "tmovdoscon.estado_docsolicitud,\n"
                    + "tmaepercon.cedula_persona,\n"
                    + "tmaepercon.nombre_persona,\n"
                    + "tmaepercon.apellido_persona,\n"
                    + "tmovdoscon.codigooficio_docsolicitud, tmovdoscon.fechaentrega_docsolicitud,tmovrehcon.id_rrhh,tmaepercon.id_persona\n"
                    + "FROM tmovdoscon,tmaepercon,tmovrehcon WHERE tmovdoscon.codigooficio_docsolicitud= '" + filaselecionadaTipoCaracpter + "'\n"
                    + "and tmaepercon.id_persona = tmovrehcon.idpersona_rrhh \n"
                    + "and tmovrehcon.id_rrhh = tmovdoscon.idsolicitante_docsolicitud\n"
                    + "and tmaepercon.id_persona BETWEEN '6' AND '10000000' and tmovdoscon.estado_docsolicitud  BETWEEN '2' AND '3'";
            ResultSet rs = conexion.ejecutarSQLSelect(sql);
            try {

                while (rs.next()) {
                    datosASerEnviados[0] = rs.getString(1);
                    datosASerEnviados[1] = rs.getString(2);
                    if (rs.getString(3).equals("2")) {
                        envia = 3;
                    }
                    datosASerEnviados[2] = rs.getString(3);
                    datosASerEnviados[3] = rs.getString(4);
                    datosASerEnviados[4] = rs.getString(5);
                    datosASerEnviados[5] = rs.getString(6);
                    datosASerEnviados[6] = rs.getString(7);
                    datosASerEnviados[7] = rs.getString(8);
                    datosASerEnviados[8] = rs.getString(9);
                }

            } catch (Exception ex) {
            }
            FRM_RegistroEntregaSolicitud rm = new FRM_RegistroEntregaSolicitud(datosASerEnviados);
            FRM_RegistroEntregaSolicitud mr1 = new FRM_RegistroEntregaSolicitud(envia);
             // Aqui ahi que poner el metodo para que se cierre la otra ventana
              dispose();
              FRM_RegistroEntregaSolicitud AbrirRegistro = new FRM_RegistroEntregaSolicitud(this, true);
              AbrirRegistro.setVisible(true);
             
        
        }
        return envia;
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        rbtn_fecha_solicitud = new javax.swing.JRadioButton();
        combo_estado_activo = new javax.swing.JComboBox();
        date_fecha_docSolicitud = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_solicitudes = new javax.swing.JTable();
        rbtn_solicitante = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_cedula_persona = new javax.swing.JTextField();
        txt_nombre_persona = new javax.swing.JTextField();
        rbtn_estado = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        btn_modificar = new javax.swing.JButton();
        btn_entregar = new javax.swing.JButton();
        btn_buscar_responsabl = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btn_buscar_responsabl1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Control de Entrega");

        jPanel2.setPreferredSize(new java.awt.Dimension(717, 125));

        rbtn_fecha_solicitud.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        rbtn_fecha_solicitud.setText("Fecha de solicitud");
        rbtn_fecha_solicitud.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtn_fecha_solicitudMouseClicked(evt);
            }
        });

        combo_estado_activo.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        combo_estado_activo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar", "Realizado", "Entregado" }));
        combo_estado_activo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_estado_activoActionPerformed(evt);
            }
        });

        tabla_solicitudes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Fecha solicitud", "Estado", "CÃ©dula solicitante", "Nombres Solicitante", "Apellidos Solicitante", "N Oficio Solicitud"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_solicitudes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabla_solicitudes.removeColumn(tabla_solicitudes.getColumnModel().getColumn(0));
        tabla_solicitudes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_solicitudesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_solicitudes);

        rbtn_solicitante.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        rbtn_solicitante.setText("Solicitante");
        rbtn_solicitante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtn_solicitanteMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 21)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Listado de Entregas");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel2.setText("CÃ©dula");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel3.setText("Nombres y apellidos");

        txt_cedula_persona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cedula_personaActionPerformed(evt);
            }
        });
        txt_cedula_persona.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cedula_personaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cedula_personaKeyTyped(evt);
            }
        });

        txt_nombre_persona.setEnabled(false);

        rbtn_estado.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        rbtn_estado.setText("Estado");
        rbtn_estado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbtn_estadoMouseClicked(evt);
            }
        });
        rbtn_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtn_estadoActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_modificar.setBackground(new java.awt.Color(255, 255, 255));
        btn_modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/1/pencil.png"))); // NOI18N
        btn_modificar.setContentAreaFilled(false);
        btn_modificar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });

        btn_entregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/portapapeles.png"))); // NOI18N
        btn_entregar.setContentAreaFilled(false);
        btn_entregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_entregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_entregar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_entregar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btn_modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_buscar_responsabl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/magnifier-tool (1).png"))); // NOI18N
        btn_buscar_responsabl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_buscar_responsabl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_responsablActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(68, 69, 69));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        jToolBar2.setBackground(new java.awt.Color(117, 214, 255));
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jButton1.setBackground(new java.awt.Color(117, 214, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/add-new-file (1).png"))); // NOI18N
        jButton1.setText("   Nuevo   ");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton2.setBackground(new java.awt.Color(117, 214, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/logout (1).png"))); // NOI18N
        jButton2.setText("   Regresar");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        btn_buscar_responsabl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/magnifier-tool (1).png"))); // NOI18N
        btn_buscar_responsabl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_buscar_responsabl1MouseClicked(evt);
            }
        });
        btn_buscar_responsabl1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscar_responsabl1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(14, 14, 14)
                                .addComponent(txt_nombre_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(rbtn_fecha_solicitud)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(date_fecha_docSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(rbtn_estado)
                                        .addGap(18, 18, 18)
                                        .addComponent(combo_estado_activo, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtn_solicitante)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_cedula_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_buscar_responsabl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_buscar_responsabl1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btn_buscar_responsabl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date_fecha_docSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbtn_fecha_solicitud)
                                    .addComponent(rbtn_solicitante))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(txt_cedula_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btn_buscar_responsabl1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_nombre_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtn_estado)
                    .addComponent(combo_estado_activo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        rbtn_fecha_solicitud.getAccessibleContext().setAccessibleName("rb_Fecha_Solicitud");
        combo_estado_activo.getAccessibleContext().setAccessibleName("cb_Estado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 839, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("sp_Detalles_BÃºsqueda_Solicitante");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbtn_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtn_estadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtn_estadoActionPerformed

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
        mandarDatos();
    }//GEN-LAST:event_btn_modificarActionPerformed

    private void btn_buscar_responsablActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_responsablActionPerformed
        if (txt_cedula_persona.getText().equals("")) {
            mensaje.msg_advertencia(this,"Ingrese un criterio de busqueda");
            txt_cedula_persona.requestFocus();
        } else {
             if(busquedacedula(txt_cedula_persona.getText())==0){
                 txt_nombre_persona.setText("");
                 model = new DefaultTableModel(null, var2);
                 tabla_solicitudes.setModel(model);
             }
    }//GEN-LAST:event_btn_buscar_responsablActionPerformed

    }
    
    private void btn_entregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_entregarActionPerformed
       
        mandarDatos();
    }//GEN-LAST:event_btn_entregarActionPerformed

    private void btn_buscar_responsabl1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscar_responsabl1ActionPerformed
      
        if (date_fecha_docSolicitud.getDate() == null) {
               mensaje.msg_advertencia(this,"Ingrese un criterio de busqueda");  
        }else {
             if( busquedaFeacha()==0){
              model = new DefaultTableModel(null, var2);
              tabla_solicitudes.setModel(model);
             }
        }  
    }//GEN-LAST:event_btn_buscar_responsabl1ActionPerformed

    private void rbtn_estadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtn_estadoMouseClicked
        activarcampos();
    }//GEN-LAST:event_rbtn_estadoMouseClicked

    private void rbtn_solicitanteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtn_solicitanteMouseClicked
        activarcampos();
    }//GEN-LAST:event_rbtn_solicitanteMouseClicked

    private void rbtn_fecha_solicitudMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbtn_fecha_solicitudMouseClicked
        activarcampos();
    }//GEN-LAST:event_rbtn_fecha_solicitudMouseClicked

    private void btn_buscar_responsabl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_buscar_responsabl1MouseClicked

    }//GEN-LAST:event_btn_buscar_responsabl1MouseClicked

    private void combo_estado_activoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_estado_activoActionPerformed
        int realizado, entregado;
        if ("Seleccionar".equals(combo_estado_activo.getSelectedItem().toString())) {
            model = new DefaultTableModel(null, var2);
            tabla_solicitudes.setModel(model);
            btn_modificar.setEnabled(true);
            btn_entregar.setEnabled(true);
        }
        if ("Realizado".equals(combo_estado_activo.getSelectedItem().toString())) {
            model = new DefaultTableModel(null, var2);
            tabla_solicitudes.setModel(model);
            realizado = 2;
            btn_modificar.setEnabled(false);
            busquedaCombox(realizado);
        } else {
            btn_modificar.setEnabled(true);
        }
        if ("Entregado".equals(combo_estado_activo.getSelectedItem().toString())) {
            model = new DefaultTableModel(null, var2);
            tabla_solicitudes.setModel(model);
            entregado = 3;
            btn_entregar.setEnabled(false);
            busquedaCombox(entregado);
        } else {
            btn_entregar.setEnabled(true);
        }

    }//GEN-LAST:event_combo_estado_activoActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        nuevo();
    }//GEN-LAST:event_jButton1MouseClicked

    private void txt_cedula_personaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cedula_personaKeyReleased

    }//GEN-LAST:event_txt_cedula_personaKeyReleased

    private void txt_cedula_personaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cedula_personaKeyTyped
        char x = evt.getKeyChar();
        if (x < '0' || x > '9' || txt_cedula_persona.getText().length()>9) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_cedula_personaKeyTyped

    private void tabla_solicitudesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_solicitudesMouseClicked
        activarBtn();
    }//GEN-LAST:event_tabla_solicitudesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        nuevo();   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_cedula_personaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cedula_personaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cedula_personaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(mensaje.msg_Pregunta(this, "Â¿Dese ccerrar el formulario de control de entregas?")==0){
            dispose();
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRM_ControlEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRM_ControlEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRM_ControlEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRM_ControlEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FRM_ControlEntrega dialog = new FRM_ControlEntrega(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar_responsabl;
    private javax.swing.JButton btn_buscar_responsabl1;
    private javax.swing.JButton btn_entregar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JComboBox combo_estado_activo;
    private com.toedter.calendar.JDateChooser date_fecha_docSolicitud;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JRadioButton rbtn_estado;
    private javax.swing.JRadioButton rbtn_fecha_solicitud;
    private javax.swing.JRadioButton rbtn_solicitante;
    private javax.swing.JTable tabla_solicitudes;
    private javax.swing.JTextField txt_cedula_persona;
    private javax.swing.JTextField txt_nombre_persona;
    // End of variables declaration//GEN-END:variables

}
